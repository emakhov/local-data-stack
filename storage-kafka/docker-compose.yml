version: '3.8'

networks:
  local-stack-network:
    name: local-stack-network
    external: true

services:
  service-zookeeper:
    image: confluentinc/cp-zookeeper:7.2.1
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - local-stack-network
    ports:
      - "2181:2181"
  service-kafka-broker:
    depends_on:
      - service-zookeeper
    image: confluentinc/cp-kafka:7.2.1
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: service-zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://service-kafka-broker:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - local-stack-network
    ports:
      - "9092:9092"
  service-kafka-schema-registry:
    depends_on:
      - service-zookeeper
      - service-kafka-broker
    image: confluentinc/cp-schema-registry:7.2.1
    environment:
      SCHEMA_REGISTRY_HOST_NAME: service-kafka-schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: service-zookeeper:2181
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: service-kafka-broker:29092
    networks:
      - local-stack-network
    ports:
      - "8081:8081"

  # Kafka connect for Data Upload to S3
#  connect:
#    # viewable at http://localhost:9021/
#    image: confluentinc/cp-kafka-connect-base:7.2.1
#    depends_on:
#      - zookeeper
#      - kafka
#      - schema-registry
#    ports:
#      - "8083:8083"
#    environment:
#      CONNECT_BOOTSTRAP_SERVERS: 'kafka:29092'
#      CONNECT_REST_ADVERTISED_HOST_NAME: connect
#      CONNECT_REST_PORT: 8083
#      CONNECT_GROUP_ID: compose-connect-group
#      CONNECT_CONFIG_STORAGE_TOPIC: docker-connect-configs
#      CONNECT_OFFSET_STORAGE_TOPIC: docker-connect-offsets
#      CONNECT_STATUS_STORAGE_TOPIC: docker-connect-status
#      CONNECT_KEY_CONVERTER: org.apache.kafka.connect.storage.StringConverter
#      CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL: 'http://schema-registry:8081'
#      CONNECT_VALUE_CONVERTER: io.confluent.connect.avro.AvroConverter
#      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: http://schema-registry:8081
#      CONNECT_INTERNAL_KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
#      CONNECT_INTERNAL_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
#      CONNECT_LOG4J_ROOT_LOGLEVEL: "INFO"
#      CONNECT_LOG4J_LOGGERS: org.apache.zookeeper=ERROR,org.I0Itec.zkclient=ERROR,org.reflections=ERROR
#      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
#      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
#      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
#      CONNECT_PLUGIN_PATH: "/usr/share/java,/usr/share/confluent-hub-components"
#      CONNECT_ZOOKEEPER_CONNECT: 'zookeeper:2181'
#    command:
#      - bash
#      - -c
#      - |
#        #
#        echo "Installing connector plugins"
#        confluent-hub install --no-prompt clickhouse/clickhouse-kafka-connect:v1.0.14
#        #
#        echo "Launching Kafka Connect worker"
#        /etc/confluent/docker/run &
#        #
#        echo "Waiting for Kafka Connect to start listening on localhost ⏳"
#        while : ; do
#          curl_status=$$(curl -s -o /dev/null -w %{http_code} http://localhost:8083/connectors)
#          echo -e $$(date) " Kafka Connect listener HTTP state: " $$curl_status " (waiting for 200)"
#          if [ $$curl_status -eq 200 ] ; then
#            break
#          fi
#          sleep 5
#        done
#        echo -e "\n--\n+> Creating ClickHouse Sink source"
#        curl -s -X PUT -H  "Content-Type:application/json" http://localhost:8083/connectors/test_connector/config \
#            -d '{
#            "connector.class": "com.clickhouse.kafka.connect.ClickHouseSinkConnector",
#            "tasks.max": "1",
#            "consumer.override.max.poll.records": "5000",
#            "consumer.override.max.partition.fetch.bytes": "5242880",
#            "database": "dwh",
#            "errors.retry.timeout": "60",
#            "exactlyOnce": "false",
#            "hostname": "clickhouse",
#            "username": "click",
#            "password": "click",
#            "ssl": "false",
#            "port": "8123",
#            "topics": "weblog_events",
#            "value.converter": "org.apache.kafka.connect.json.JsonConverter",
#            "value.converter.schemas.enable": "false",
#            "clickhouseSettings": ""
#        }'
#        sleep infinity
  
