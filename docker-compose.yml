version: '3.8'

volumes:
  postgres-data:
  minio-data:

networks:
  local-stack-network:
    name: local-stack-network
    driver: bridge

services:
  # Postgres Database
  storage-postgres:
    image: postgres:15-alpine
    env_file:
      - .env
    volumes:
      - ./storage-postgres:/docker-entrypoint-initdb.d
      - postgres-data:/var/lib/postgresql/data
    networks:
      - local-stack-network
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
  # MinIO
  storage-minio:
    image: minio/minio:RELEASE.2024-01-29T03-56-32Z
    env_file:
      - .env
    volumes:
      - minio-data:/data
    networks:
      - local-stack-network
    ports:
      - "9000:9000"
      - "9001:9001"
    command: server /data --console-address ":9001"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9000/minio/health/live" ]
      interval: 30s
      timeout: 20s
      retries: 3
  minio-mc:
    depends_on:
      - storage-minio
    image: minio/mc:RELEASE.2024-01-28T16-23-14Z
    environment:
      - AWS_ACCESS_KEY_ID=${MINIO_ROOT_USER}
      - AWS_SECRET_ACCESS_KEY=${MINIO_ROOT_PASSWORD}
      - AWS_DEFAULT_REGION=us-east-1
    networks:
      - local-stack-network
    entrypoint: >
      /bin/sh -c "
      sleep 10 &&
      mc alias set storage-minio http://storage-minio:9000 ${MINIO_ROOT_USER} ${MINIO_ROOT_PASSWORD} &&
      mc mb storage-minio/datalake &&
      mc mb storage-minio/mlflow || true
      "
  # Clickhouse
  storage-clickhouse:
    image: clickhouse/clickhouse-server:24.3-alpine
    env_file:
      - .env
    volumes:
      - ./storage-clickhouse:/docker-entrypoint-initdb.d
    networks:
      - local-stack-network
    ports:
      - "8123:8123"  # HTTP interface
      - "9010:9000"  # Native TCP interface
    healthcheck:
      test: [ "CMD-SHELL", "curl -s http://localhost:8123/ping | grep -q 'Ok'" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s